apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/groups/public" }
    }
    dependencies {
        classpath 'com.github.townsfolk:gradle-release:1.2'
    }
}
apply plugin: 'release'

sourceCompatibility = 1.7
targetCompatibility = 1.7

group = 'com.bskyb.kafka'

jar {
    baseName = 'kafka-unit'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

if (!project.hasProperty("ossrhUsername")) {
    ext.ossrhUsername = "dummy"
}
if (!project.hasProperty("ossrhPassword")) {
    ext.ossrhPassword = "dummy"
}

createReleaseTag.dependsOn uploadArchives

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: skyReleasesRepo) {
                authentication(userName: archivaUser, password: archivaPass)
            }

            snapshotRepository(url: skySnapshotsRepo) {
                authentication(userName: archivaUser, password: archivaPass)
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'junit:junit:4.11'
    compile('org.apache.kafka:kafka_2.11:0.10.0.0') {
        exclude module: 'slf4j-simple'
        exclude module: 'slf4j-log4j12'
        exclude module: 'jmxtools'
        exclude module: 'jmxri'
        exclude module: 'jms'
    }
    compile('org.apache.zookeeper:zookeeper:3.4.6') {
        exclude module: 'slf4j-log4j12'
        exclude module: 'log4j'
    }
    compile('org.apache.commons:commons-io:1.3.2')

    testCompile group: 'junit', name: 'junit', version: '4.11'

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}
